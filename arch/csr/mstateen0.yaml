# yaml-language-server: $schema=../../schemas/csr_schema.json

$schema: "csr_schema.json#"
kind: csr
name: mstateen0
long_name: Machine State Enable 0 Register
address: 0x30C
priv_mode: M
length: MXLEN
description: |
  For each mstateen CSR, bit 63 is defined to control access to the matching sstateen and hstateen
  CSRs. Bit 63 of mstateen0 controls access to sstateen0 and hstateen0.

  On reset, all writable mstateen bits are initialized by the hardware to zeros. If machine-level software
  changes these values, it is responsible for initializing the corresponding writable bits of the hstateen
  and sstateen CSRs to zeros too. Software at each privilege level should set its respective stateen CSRs
  to indicate the state it is prepared to allow less-privileged software to access. For OSes and hypervisors,
  this usually means the state that the OS or hypervisor is prepared to swap on a context switch, or to
  manage in some other way.
definedBy: Smstateen
fields:
  SE0:
    location: 63
    base: 64
    description: |
      The SE0 bit in mstateen0 controls access to the hstateen0, hstateen0h, and the sstateen0 CSRs.
    type: RW
    reset_value: UNDEFINED_LEGAL
  ENVCFG:
    location: 62
    base: 64
    description: |
      The ENVCFG bit in mstateen0 controls access to the henvcfg, henvcfgh, and the senvcfg CSRs.
    type: RW
    reset_value: UNDEFINED_LEGAL
  CSRIND:
    location: 60
    base: 64
    description: |
      The CSRIND bit in mstateen0 controls access to the siselect, sireg*, vsiselect, and the vsireg*
      CSRs provided by the Sscsrind extensions.
    type: RW
    reset_value: UNDEFINED_LEGAL
  AIA:
    location: 59
    base: 64
    description: |
      The AIA bit in mstateen0 controls access to all state introduced by the Ssaia extension and is not
      controlled by either the CSRIND or the IMSIC bits.
    type: RW
    reset_value: UNDEFINED_LEGAL
  IMSIC:
    location: 58
    base: 64
    description: |
      The IMSIC bit in mstateen0 controls access to the IMSIC state, including CSRs stopei and vstopei,
      provided by the Ssaia extension.
    type: RW
    reset_value: UNDEFINED_LEGAL
  CONTEXT:
    location: 57
    base: 64
    description: |
      The CONTEXT bit in mstateen0 controls access to the scontext and hcontext CSRs provided by the
      Sdtrig extension.
    type: RW
    reset_value: UNDEFINED_LEGAL
  P1P13:
    location: 56
    base: 64
    description: |
      The P1P13 bit in mstateen0 controls access to the hedelegh introduced by Privileged Specification
      Version 1.13.
    type: RW
    reset_value: UNDEFINED_LEGAL
  JVT:
    location: 2
    description: |
      The JVT bit controls access to the jvt CSR provided by the Zcmt extension.
    type: RW
    reset_value: UNDEFINED_LEGAL
  FCSR:
    location: 1
    description: |
      The FCSR bit controls access to fcsr for the case when floating-point instructions
      operate on x registers instead of f registers as specified by the Zfinx and related
      extensions (Zdinx, etc.). Whenever misa.F = 1, FCSR bit of mstateen0 is read-only
      zero (and hence read-only zero in hstateen0 and sstateen0 too). For convenience,
      when the stateen CSRs are implemented and misa.F = 0, then if the FCSR bit of a
      controlling stateen0 CSR is zero, all floating-point instructions cause an illegal
      instruction trap (or virtual instruction trap, if relevant), as though they all access
      fcsr, regardless of whether they really do.
    type: RW
    reset_value: UNDEFINED_LEGAL
  C:
    location: 0
    description: |
      The C bit controls access to any and all custom state. This bit is not custom state itself. The C bit of
      these registers is not custom state itself; it is a standard field of a standard CSR, either mstateen0,
      hstateen0, or sstateen0.
    type: RW
    reset_value: UNDEFINED_LEGAL
